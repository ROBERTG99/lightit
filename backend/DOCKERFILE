# backend/Dockerfile

# Stage 1: Build the Go binary
FROM golang:1.20-alpine AS builder

WORKDIR /app
RUN apk add --no-cache git

# Copy go.mod and go.sum, then download dependencies
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the source code
COPY . .

# Build the Go binary
RUN go build -o /app/bin/patient-api .

# Stage 2: Final run stage
FROM alpine:latest

# Install any needed CA certificates
RUN apk add --no-cache ca-certificates

# Create a non-root user
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /app

# Copy the compiled binary from builder
COPY --from=builder /app/bin/patient-api ./

# Copy the wait-for script
COPY wait-for-postgres.sh ./ 

# Make sure it's executable
RUN chmod +x /app/wait-for-postgres.sh

RUN chown appuser:appgroup /app

USER appuser
EXPOSE 8080
CMD ["./patient-api"]
